---
import Section from "./Section.astro";
import { Image } from "astro:assets";
import type { ProjectProps } from "@types";

interface Props {
  projects: ProjectProps[];
}

const { projects } = Astro.props;
---

<Section text="Featured Projects" href="projects">
  <div id="projects-content">
    {
      projects.map(({ name, summary, image, linkPreview }, index) => {
        const top = 98 + index * 40;
        return (
          <div
            style={`top: ${top}px;`}
            class="sticky mb-12 rounded-2xl border border-neutral/20 bg-black project-card"
            data-project-index={index}
          >
            <div class="bg-difu relative z-[1] grid h-auto min-h-[580px] w-full grid-rows-2 rounded-2xl bg-[#1c232d]/85 before:absolute before:inset-0 before:z-[-1] before:rounded-2xl before:bg-[url(/raja.png)] before:bg-[length:128px] before:bg-repeat before:opacity-[5%] before:content-[''] sm:grid-cols-2 sm:grid-rows-1 sm:min-h-[400px] md:min-h-96">
              <div class="flex flex-col justify-between px-6 pt-12 pb-6">
                <div>
                  <h3 class="mb-5 font-serif text-2xl sm:text-3xl font-medium text-primary project-name gradient-text-accent">
                    {name}
                  </h3>
                  <p class="text-sm sm:text-base text-neutral project-summary leading-relaxed line-clamp-4 sm:line-clamp-none">{summary}</p>
                </div>
                <div class="flex gap-5 pt-6 sm:pt-10">
                  <a
                    href={linkPreview}
                    target="_blank"
                    class="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-medium rounded-lg transition-all duration-300 transform hover:scale-105 hover:shadow-lg project-preview"
                  >
                    <span>Preview</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                  </a>
                </div>
              </div>
              <div class="flex items-center justify-center p-4 sm:p-6 overflow-hidden">
                <Image
                  class="max-h-full max-w-full w-auto h-auto rounded-xl object-contain object-center"
                  src={image}
                  alt={name}
                  width="400"
                  height="300"
                />
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
</Section>

<script>
  import { languageStore } from "@app/language-store";

  const updateProjects = () => {
    const content = languageStore.content.projects;
    const ui = languageStore.content.ui;
    
    const projectItems = document.querySelectorAll('[data-project-index]');
    
    projectItems.forEach((item, index) => {
      const projectData = content[index];
      if (projectData) {
        const nameEl = item.querySelector('.project-name');
        const summaryEl = item.querySelector('.project-summary');
        const previewEl = item.querySelector('.project-preview');
        
        if (nameEl) nameEl.textContent = projectData.name;
        if (summaryEl) summaryEl.textContent = projectData.summary;
        if (previewEl) previewEl.textContent = ui.preview;
      }
    });
  };

  // Listen for language changes
  window.addEventListener('language-change', updateProjects);
  
  // Initialize
  updateProjects();
</script>
